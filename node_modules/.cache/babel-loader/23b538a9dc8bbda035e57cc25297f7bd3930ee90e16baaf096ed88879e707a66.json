{"ast":null,"code":"var _jsxFileName = \"/Users/RomuloRomulo/Documents/Estudo_React/04-Food App/src/components/Form/Form.js\";\nimport UseInput from \"../Hooks/use-input\";\nimport classes from \"./Form.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nameValidation = value => value.trim() !== \"\";\nconst BasicForm = props => {\n  const {\n    value: enteredName,\n    isValid: nameIsValid,\n    hasError: nameInputHassError,\n    inputBlurHandler: nameBlurHandler,\n    valueChangeHandler: nameChangeHandler,\n    reset: nameReset\n  } = UseInput(nameValidation);\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    hasError: lastNameInputHassError,\n    inputBlurHandler: lastNameBlurHandler,\n    valueChangeHandler: lastNameChangeHandler,\n    reset: lastNameReset\n  } = UseInput(nameValidation);\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailInputHassError,\n    inputBlurHandler: emailBlurHandler,\n    valueChangeHandler: emailChangeHandler,\n    reset: emailReset\n  } = UseInput(value => {\n    return value.trim() !== \"\" && value.trim().includes(\"@\");\n  });\n  const {\n    value: enteredAdress,\n    isValid: adressIsValid,\n    hasError: adressInputHassError,\n    inputBlurHandler: adressBlurHandler,\n    valueChangeHandler: adressChangeHandler,\n    reset: adressReset\n  } = UseInput(value => {\n    return value.trim() !== \"\" && /\\d/.test(value);\n  });\n  const userInformation = [];\n  const backEnd = async () => {\n    await fetch(\"https://realistic-example-483a6-default-rtdb.firebaseio.com/user.json\", {\n      method: \"POST\",\n      body: JSON.stringify(userInformation)\n    });\n  };\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    if (!nameIsValid || !emailIsValid || !lastNameIsValid || !adressIsValid) {\n      return;\n    }\n    console.log(enteredName, enteredLastName, enteredEmail);\n    userInformation.push({\n      name: enteredName,\n      lastName: enteredLastName,\n      email: enteredEmail\n    });\n    backEnd();\n    nameReset();\n    lastNameReset();\n    emailReset();\n    adressReset();\n  };\n  let formIsValid;\n  if (nameIsValid && emailIsValid && lastNameIsValid) {\n    formIsValid = true;\n  }\n  const nameInputClass = nameInputHassError ? `${classes[\"form-control\"]} ${classes.invalid}` : `${classes[\"form-control\"]}`;\n  const emailInputClass = emailInputHassError ? `${classes[\"form-control\"]} ${classes.invalid}` : `${classes[\"form-control\"]}`;\n  const lastNameInputClass = lastNameInputHassError ? `${classes[\"form-control\"]} ${classes.invalid}` : `${classes[\"form-control\"]}`;\n  const adressInputClass = adressInputHassError ? `${classes[\"form-control\"]} ${classes.invalid}` : `${classes[\"form-control\"]}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: onSubmitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: nameChangeHandler,\n          onBlur: nameBlurHandler,\n          value: enteredName,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), nameInputHassError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes[`error-text`],\n          children: \"Name input must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), lastNameInputHassError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes[`error-text`],\n          children: \"Last Name input must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: emailInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"E-Mail Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: emailChangeHandler,\n          onBlur: emailBlurHandler,\n          value: enteredEmail,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), emailInputHassError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"E-mail invalid.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: adressInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Adress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: adressChangeHandler,\n          onBlur: adressBlurHandler,\n          value: enteredAdress,\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), emailInputHassError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes[`error-text`],\n          children: \"E-mail invalid.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes[\"form-button\"],\n          disabled: !formIsValid,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["UseInput","classes","nameValidation","value","trim","BasicForm","props","enteredName","isValid","nameIsValid","hasError","nameInputHassError","inputBlurHandler","nameBlurHandler","valueChangeHandler","nameChangeHandler","reset","nameReset","enteredLastName","lastNameIsValid","lastNameInputHassError","lastNameBlurHandler","lastNameChangeHandler","lastNameReset","enteredEmail","emailIsValid","emailInputHassError","emailBlurHandler","emailChangeHandler","emailReset","includes","enteredAdress","adressIsValid","adressInputHassError","adressBlurHandler","adressChangeHandler","adressReset","test","userInformation","backEnd","fetch","method","body","JSON","stringify","onSubmitHandler","e","preventDefault","console","log","push","name","lastName","email","formIsValid","nameInputClass","invalid","emailInputClass","lastNameInputClass","adressInputClass","form"],"sources":["/Users/RomuloRomulo/Documents/Estudo_React/04-Food App/src/components/Form/Form.js"],"sourcesContent":["import UseInput from \"../Hooks/use-input\";\nimport classes from \"./Form.module.css\";\nconst nameValidation = (value) => value.trim() !== \"\";\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredName,\n    isValid: nameIsValid,\n    hasError: nameInputHassError,\n    inputBlurHandler: nameBlurHandler,\n    valueChangeHandler: nameChangeHandler,\n    reset: nameReset,\n  } = UseInput(nameValidation);\n\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    hasError: lastNameInputHassError,\n    inputBlurHandler: lastNameBlurHandler,\n    valueChangeHandler: lastNameChangeHandler,\n    reset: lastNameReset,\n  } = UseInput(nameValidation);\n\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailInputHassError,\n    inputBlurHandler: emailBlurHandler,\n    valueChangeHandler: emailChangeHandler,\n    reset: emailReset,\n  } = UseInput((value) => {\n    return value.trim() !== \"\" && value.trim().includes(\"@\");\n  });\n  const {\n    value: enteredAdress,\n    isValid: adressIsValid,\n    hasError: adressInputHassError,\n    inputBlurHandler: adressBlurHandler,\n    valueChangeHandler: adressChangeHandler,\n    reset: adressReset,\n  } = UseInput((value) => {\n    return value.trim() !== \"\" && /\\d/.test(value);\n  });\n\n  const userInformation = [];\n\n  const backEnd = async () => {\n    await fetch(\n      \"https://realistic-example-483a6-default-rtdb.firebaseio.com/user.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(userInformation),\n      }\n    );\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    if (!nameIsValid || !emailIsValid || !lastNameIsValid || !adressIsValid) {\n      return;\n    }\n\n    console.log(enteredName, enteredLastName, enteredEmail);\n\n    userInformation.push({\n      name: enteredName,\n      lastName: enteredLastName,\n      email: enteredEmail,\n    });\n    backEnd();\n    nameReset();\n    lastNameReset();\n    emailReset();\n    adressReset();\n  };\n\n  let formIsValid;\n\n  if (nameIsValid && emailIsValid && lastNameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputClass = nameInputHassError\n    ? `${classes[\"form-control\"]} ${classes.invalid}`\n    : `${classes[\"form-control\"]}`;\n\n  const emailInputClass = emailInputHassError\n    ? `${classes[\"form-control\"]} ${classes.invalid}`\n    : `${classes[\"form-control\"]}`;\n\n  const lastNameInputClass = lastNameInputHassError\n    ? `${classes[\"form-control\"]} ${classes.invalid}`\n    : `${classes[\"form-control\"]}`;\n\n  const adressInputClass = adressInputHassError\n    ? `${classes[\"form-control\"]} ${classes.invalid}`\n    : `${classes[\"form-control\"]}`;\n\n  return (\n    <form className={classes.form} onSubmit={onSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={nameInputClass}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            onChange={nameChangeHandler}\n            onBlur={nameBlurHandler}\n            value={enteredName}\n            type=\"text\"\n            id=\"name\"\n          />\n          {nameInputHassError && (\n            <p className={classes[`error-text`]}>\n              Name input must not be empty\n            </p>\n          )}\n        </div>\n        <div className={lastNameInputClass}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={enteredLastName}\n            type=\"text\"\n            id=\"name\"\n          />\n          {lastNameInputHassError && (\n            <p className={classes[`error-text`]}>\n              Last Name input must not be empty\n            </p>\n          )}\n        </div>\n\n        <div className={emailInputClass}>\n          <label htmlFor=\"name\">E-Mail Address</label>\n          <input\n            onChange={emailChangeHandler}\n            onBlur={emailBlurHandler}\n            value={enteredEmail}\n            type=\"text\"\n            id=\"name\"\n          />\n          {emailInputHassError && <p className=\"error-text\">E-mail invalid.</p>}\n        </div>\n        <div className={adressInputClass}>\n          <label htmlFor=\"name\">Adress</label>\n          <input\n            onChange={adressChangeHandler}\n            onBlur={adressBlurHandler}\n            value={enteredAdress}\n            type=\"text\"\n            id=\"name\"\n          />\n          {emailInputHassError && (\n            <p className={classes[`error-text`]}>E-mail invalid.</p>\n          )}\n        </div>\n        <div className=\"form-actions\">\n          <button className={classes[\"form-button\"]} disabled={!formIsValid}>\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}