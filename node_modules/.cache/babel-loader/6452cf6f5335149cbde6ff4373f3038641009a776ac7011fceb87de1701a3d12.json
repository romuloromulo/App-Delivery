{"ast":null,"code":"var _jsxFileName = \"/Users/RomuloRomulo/Documents/Estudo_React/04-Food App/src/components/Cart/Checkout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === \"\";\nconst isFiveChars = value => value.trim().length === 5;\nconst Checkout = props => {\n  _s();\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalcode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const pcInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = pcInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isFiveChars(enteredPostalCode);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalcode: enteredPostalIsValid\n    });\n    const formIsValid = enteredCityIsValid && enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid;\n    if (!formIsValid) {\n      return;\n    }\n  };\n  const nameControlClasses = `${classes.control} ${formInputValidity.name ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputValidity.city ? \"\" : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputValidity.street ? \"\" : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputValidity.postalcode ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: streetInputRef,\n        type: \"text\",\n        id: \"street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: pcInputRef,\n        type: \"text\",\n        id: \"postal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), !formInputValidity.postalcode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: cityInputRef,\n        type: \"text\",\n        id: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"N4SjM+Ec+7F+lM+qFo9Pn4JbjZk=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputValidity","setFormInputValidity","name","street","city","postalcode","nameInputRef","streetInputRef","pcInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","formIsValid","nameControlClasses","control","invalid","cityControlClasses","streetControlClasses","postalCodeControlClasses","form","actions","onCancel","submit"],"sources":["/Users/RomuloRomulo/Documents/Estudo_React/04-Food App/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalcode: true,\n  });\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const pcInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = pcInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isFiveChars(enteredPostalCode);\n\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalcode: enteredPostalIsValid,\n    });\n\n    const formIsValid =\n      enteredCityIsValid &&\n      enteredNameIsValid &&\n      enteredStreetIsValid &&\n      enteredPostalIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n  const nameControlClasses = `${classes.control} ${\n    formInputValidity.name ? \"\" : classes.invalid\n  }`;\n  const cityControlClasses = `${classes.control} ${\n    formInputValidity.city ? \"\" : classes.invalid\n  }`;\n  const streetControlClasses = `${classes.control} ${\n    formInputValidity.street ? \"\" : classes.invalid\n  }`;\n  const postalCodeControlClasses = `${classes.control} ${\n    formInputValidity.postalcode ? \"\" : classes.invalid\n  }`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input ref={nameInputRef} type=\"text\" id=\"name\" />\n        {!formInputValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input ref={streetInputRef} type=\"text\" id=\"street\" />\n        {!formInputValidity.street && <p>Please enter a valid street!</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input ref={pcInputRef} type=\"text\" id=\"postal\" />\n        {!formInputValidity.postalcode && (\n          <p>Please enter a valid postal code!</p>\n        )}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor=\"city\">City</label>\n        <input ref={cityInputRef} type=\"text\" id=\"city\" />\n        {!formInputValidity.city && <p>Please enter a valid city name!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}